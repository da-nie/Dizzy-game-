#ifndef I_ACTION_H
#define I_ACTION_H

//****************************************************************************************************
//»нтерфейс действий
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "../Game/ipart.h"
#include "../Game/cgamestate.h"
#include <memory>

//****************************************************************************************************
//макроопределени€
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объ€влени€
//****************************************************************************************************

//****************************************************************************************************
//»нтерфейс действий
//****************************************************************************************************
class IAction
{
 public:
  //-перечислени€---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
 public:
  //-деструктор-----------------------------------------------------------------------------------------
  virtual ~IAction() {};
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  virtual void Execute(std::shared_ptr<IPart> iPart_Ptr,CGameState &cGameState)=0;//выполнить действие с элементом
  virtual void Init(void)=0;//инициализаци€
  //-открытые статические функции-----------------------------------------------------------------------
};

#endif