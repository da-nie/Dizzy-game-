#ifndef C_CONDITIONAL_OF_NOT_DIZZY_INTERSECTION_H
#define C_CONDITIONAL_OF_NOT_DIZZY_INTERSECTION_H

//****************************************************************************************************
//Класс условного выражения "нет пересечения с Диззи"
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "iconditionalexpression.h"
#include "../Actions/iaction.h"
#include <string>
#include <stdint.h>

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объявления
//****************************************************************************************************

//****************************************************************************************************
//Класс условного выражения "не пересечения с Диззи"
//****************************************************************************************************
class CConditionalOfNotDizzyIntersection:public IConditionalExpression
{
 public:
  //-перечисления---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
  std::string Name;//имя объекта, пересечение с которым проверяется
  std::shared_ptr<IAction> iAction_Ptr;//указатель на выполняемое действие
 public:
  //-конструктор----------------------------------------------------------------------------------------
  CConditionalOfNotDizzyIntersection(const std::string &name,std::shared_ptr<IAction> iAction_SetPtr);
  //-деструктор-----------------------------------------------------------------------------------------
  ~CConditionalOfNotDizzyIntersection();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  void Execute(int32_t dizzy_x,int32_t dizzy_y,int32_t dizzy_width,int32_t dizzy_height,int32_t part_width,int32_t part_height,bool use,bool timer,CGameState &cGameState);//проверить условие и выполнить действие
 private:
  //-закрытые функции-----------------------------------------------------------------------------------  
  void Init(void);//инициализация
};

#endif