#ifndef C_CONDITIONAL_OF_USE_H
#define C_CONDITIONAL_OF_USE_H

//****************************************************************************************************
// ласс условного выражени€ "использовать"
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "iconditionalexpression.h"
#include "../Actions/iaction.h"
#include <string>
#include <stdint.h>

//****************************************************************************************************
//макроопределени€
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объ€влени€
//****************************************************************************************************

//****************************************************************************************************
// ласс условного выражени€ "использовать"
//****************************************************************************************************
class CConditionalOfUse:public IConditionalExpression
{
 public:
  //-перечислени€---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
  std::string Name_One;//первый элемент
  std::string Name_Two;//второй элемент
  std::shared_ptr<IAction> iAction_OnePtr;//указатель на действие с первым объектом
  std::shared_ptr<IAction> iAction_TwoPtr;//указатель на действие со вторым объектом
 public:
  //-конструктор----------------------------------------------------------------------------------------
  CConditionalOfUse(const std::string &name_one,const std::string &name_two,std::shared_ptr<IAction> iAction_OneSetPtr,std::shared_ptr<IAction> iAction_TwoSetPtr);
  //-деструктор-----------------------------------------------------------------------------------------
  ~CConditionalOfUse();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  void Execute(int32_t dizzy_x,int32_t dizzy_y,int32_t dizzy_width,int32_t dizzy_height,int32_t part_width,int32_t part_height,bool use,bool timer,CGameState &cGameState);//проверить условие и выполнить действие
 private:
  //-закрытые функции-----------------------------------------------------------------------------------  
  void Init(void);//инициализаци€
};

#endif