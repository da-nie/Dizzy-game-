#ifndef I_CONDITIONAL_EXPRESSION_H
#define I_CONDITIONAL_EXPRESSION_H

//****************************************************************************************************
//»нтерфейс классов условных выражение
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include <stdint.h>
#include <vector>
#include <memory>
#include "ipart.h"

//****************************************************************************************************
//макроопределени€
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объ€влени€
//****************************************************************************************************
class CGameState;

//****************************************************************************************************
//»нтерфейс классов условных выражение
//****************************************************************************************************
class IConditionalExpression
{
 public:
  //-перечислени€---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
 public:
  //-деструктор-----------------------------------------------------------------------------------------
  virtual ~IConditionalExpression() {};
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  virtual void Execute(int32_t dizzy_x,int32_t dizzy_y,int32_t dizzy_width,int32_t dizzy_height,int32_t part_width,int32_t part_height,bool use,bool timer,CGameState &cGameState)=0;//проверить условие и выполнить действие
  //-открытые статические функции-----------------------------------------------------------------------
};

#endif