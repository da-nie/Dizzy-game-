#ifndef C_PART_H
#define C_PART_H

//****************************************************************************************************
//класс кусочка карты
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include <stdint.h>
#include <fstream>
#include <memory>
#include <list>
#include "ctilessequence.h"
#include "ipart.h"


//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объявления
//****************************************************************************************************

//****************************************************************************************************
//класс кусочка карты
//****************************************************************************************************
class CPart:public IPart
{
 public:
  //-перечисления---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
  //-переменные-----------------------------------------------------------------------------------------
  std::list<std::shared_ptr<IPart>> Item;//элементы
 private:
  //-переменные-----------------------------------------------------------------------------------------
 public:
  //-конструктор----------------------------------------------------------------------------------------
  CPart(int32_t block_x=0,int32_t block_y=0,const CTilesSequence &cTilesSequence_Set=CTilesSequence(),bool barrier=false);
  //-деструктор-----------------------------------------------------------------------------------------
  ~CPart();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  bool Save(std::ofstream &file);//записать
  bool Load(std::ifstream &file);//сохранить
  bool Export(std::ofstream &file);//экспортировать
  void Release(void);//удалить все элементы
  void AnimateTiles(void);//выполнить анимацию тайлов
  void Visit(std::function<void(std::shared_ptr<IPart>)> callback_function);//обойти все элементы
  void RemovePart(std::function<bool(std::shared_ptr<IPart>)> callback_function);//удалить часть
  std::list<std::shared_ptr<IPart>>* GetItemPtr(void);//получить указатель на список элементов
 private:
  //-закрытые функции-----------------------------------------------------------------------------------  
};

#endif
