#ifndef C_LEXEME_H
#define C_LEXEME_H

//****************************************************************************************************
// ласс лексем
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include <string>
#include <stdio.h>

//****************************************************************************************************
//макроопределени€
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объ€влени€
//****************************************************************************************************

//****************************************************************************************************
// ласс лексем
//****************************************************************************************************
class CLexeme
{
 public:
  //-перечислени€---------------------------------------------------------------------------------------
  //типы лексем  
  enum LEXEME_TYPE
  {
   ID_LEXEME_TYPE_UNKNOW=0,
   ID_LEXEME_TYPE_NATURAL_NUMBER,
   ID_LEXEME_TYPE_NEGATIVE_NATURAL_NUMBER,
   ID_LEXEME_TYPE_FLOAT_NUMBER,
   ID_LEXEME_TYPE_ANGLE_NUMBER,
   ID_LEXEME_TYPE_LEFTBRACKET,
   ID_LEXEME_TYPE_RIGHTBRACKET,
   ID_LEXEME_TYPE_QUOTE,
   ID_LEXEME_TYPE_IS,
   ID_LEXEME_TYPE_PLUS,
   ID_LEXEME_TYPE_MINUS,
   ID_LEXEME_TYPE_TERMINAL,
   ID_LEXEME_TYPE_COMMA,
   ID_LEXEME_USER
  };  
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
  std::string Name;//им€ лексемы
  size_t Type;//тип лексемы
 public:
  //-конструктор----------------------------------------------------------------------------------------
  CLexeme(void);
  //-деструктор-----------------------------------------------------------------------------------------
  ~CLexeme();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  void SetName(const std::string &name);//установить им€ лексемы
  void SetType(size_t type);//установить тип лексемы
  size_t GetType(void) const;//получить тип лексемы
  void GetName(std::string &name) const;//получить им€ лексемы
  bool CompareName(const std::string &name) const;//сравнить им€ лексемы  
 private:
  //-закрытые функции-----------------------------------------------------------------------------------  
};

#endif