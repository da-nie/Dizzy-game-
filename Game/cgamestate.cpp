//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "cgamestate.h"

//****************************************************************************************************
//глобальные переменные
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//конструктор и деструктор
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CGameState::CGameState(void)
{ 
 Init();
}
//----------------------------------------------------------------------------------------------------
//деструктор
//----------------------------------------------------------------------------------------------------
CGameState::~CGameState()
{
}

//****************************************************************************************************
//закрытые функции
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------------------------

//****************************************************************************************************
//открытые функции
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//очистить список возможных для взятия объектов
//----------------------------------------------------------------------------------------------------
void CGameState::ClearTake(void)
{
 Take.clear();
}
//----------------------------------------------------------------------------------------------------
//добавить объект в список возможных для взятия
//----------------------------------------------------------------------------------------------------
void CGameState::AddTake(std::shared_ptr<IPart> iPart_Ptr)
{
 Take.push_back(iPart_Ptr);
}
//----------------------------------------------------------------------------------------------------
//создать сообщение
//----------------------------------------------------------------------------------------------------
CGameState::SMessage CGameState::CreateMessage(const std::string &message,int32_t screen_x,int32_t screen_y)
{
 //определяем размер сообщения в символах
 SMessage sMessage;
 size_t length=message.length();
 std::string line;
 line.reserve(length);
 sMessage.InSymbolWidth=0;
 const char *ptr=message.c_str();
 for(size_t n=0;n<length;n++,ptr++)
 {
  uint8_t symbol=static_cast<uint8_t>(*ptr);  
  if (symbol!=static_cast<uint8_t>('\\')) line+=(*ptr);
  if (symbol==static_cast<uint8_t>('\\') || n==length-1)
  {
   size_t line_width=line.length();
   if (line_width>sMessage.InSymbolWidth) sMessage.InSymbolWidth=line_width;
   sMessage.Message.push_back(line); 
   line="";
  }  
 }
 sMessage.ScreenX=screen_x;
 sMessage.ScreenY=screen_y;
 sMessage.InSymbolHeight=sMessage.Message.size();
 return(sMessage);
}

//----------------------------------------------------------------------------------------------------
//добавить сообщение
//----------------------------------------------------------------------------------------------------
void CGameState::AddMessage(const std::string &message,int32_t screen_x,int32_t screen_y)
{
 Message.push_back(CreateMessage(message,screen_x,screen_y));
}
//----------------------------------------------------------------------------------------------------
//добавить сообщение о потере жизни
//----------------------------------------------------------------------------------------------------
void CGameState::AddMessageLifeLost(void)
{
 Message.push_back(sMessage_LifeLost);
}
//----------------------------------------------------------------------------------------------------
//добавить сообщение о завершении игры
//----------------------------------------------------------------------------------------------------
void CGameState::AddMessageGameOver(void)
{
 Message.push_back(sMessage_GameOver);
}
//----------------------------------------------------------------------------------------------------
//задать сообщение о потере жизни
//----------------------------------------------------------------------------------------------------
void CGameState::SetLifeLostMessage(const std::string &message,int32_t screen_x,int32_t screen_y)
{
 sMessage_LifeLost=CreateMessage(message,screen_x,screen_y);
}
//----------------------------------------------------------------------------------------------------
//задать сообщение о завершении игры
//----------------------------------------------------------------------------------------------------
void CGameState::SetGameOverMessage(const std::string &message,int32_t screen_x,int32_t screen_y)
{
 sMessage_GameOver=CreateMessage(message,screen_x,screen_y);
}
//----------------------------------------------------------------------------------------------------
//выполнить изменение энергии Диззи
//----------------------------------------------------------------------------------------------------
void CGameState::EnergyUpdate(int32_t d_energy)
{
 Energy+=d_energy;
 if (Energy<0) Energy=0;
 if (Energy>100) Energy=100;
}
//----------------------------------------------------------------------------------------------------
//добавить очки Диззи
//----------------------------------------------------------------------------------------------------
void CGameState::AddScore(int32_t d_score)
{
 Score+=d_score;
 if (Score<0) Score=0;
}
//----------------------------------------------------------------------------------------------------
//добавить жизнь Диззи
//----------------------------------------------------------------------------------------------------
void CGameState::AddLife(void)
{
 Life++;
 if (Life>MAX_DIZZY_LIFE) Life=MAX_DIZZY_LIFE;
}
//----------------------------------------------------------------------------------------------------
//добавить найденный предмет Диззи
//----------------------------------------------------------------------------------------------------
void CGameState::AddItem(void)
{
 Items++;
}
//----------------------------------------------------------------------------------------------------
//задать стартовую позицию Диззи
//----------------------------------------------------------------------------------------------------
void CGameState::SetDizzyStartPosition(int32_t x,int32_t y)
{
 DizzyStartPositionX=x;
 DizzyStartPositionY=y;
}
//----------------------------------------------------------------------------------------------------
//инициализация игры
//----------------------------------------------------------------------------------------------------
void CGameState::Init(void)
{
 Life=MAX_DIZZY_LIFE;
 Energy=ENERGY_MAX_VALUE;
 ScreenEnergy=0;
 Score=0;
 ScreenScore=0;
 Items=0;
 InventoryMode=false;
 InventorySelectedIndex=0;
 DizzyStartPositionX=0;
 DizzyStartPositionY=0;


 sMessage_LifeLost=CreateMessage("ДИЗЗИ ПОГИБ!\\ВЫ ПОТЕРЯЛИ ЖИЗНЬ",100,120);
 sMessage_GameOver=CreateMessage("ВЫ ПРОИГРАЛИ!",150,120);
}