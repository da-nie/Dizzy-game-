#ifndef C_LEXICAL_ANALYZER_H
#define C_LEXICAL_ANALYZER_H

//****************************************************************************************************
//Класс лексического анализатора
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "cautomath.h"
#include "clexeme.h"
#include <vector>
#include <deque>
#include <stdio.h>

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объявления
//****************************************************************************************************

//****************************************************************************************************
//Класс лексического анализатора
//****************************************************************************************************
class CLexicalAnalyzer
{
 public:
  //-перечисления---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
  CAutomath cAutomath_PrimaryLevel;//автомат первичного уровня разбора
  CAutomath cAutomath_NaturalNumber;//автомат натурального числа
  CAutomath cAutomath_FloatNumber;//автомат числа с плавающей точкой
  CAutomath cAutomath_AngleNumber;//автомат угла
  std::vector<CLexeme> vector_CLexeme;//набор распознаваемых лексем  
  std::deque<char> deque_Input;//очередь входных символов
 public:
  //-конструктор----------------------------------------------------------------------------------------
  CLexicalAnalyzer(void);
  //-деструктор-----------------------------------------------------------------------------------------
  ~CLexicalAnalyzer();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  void Reset(void);//привести анализатор в исходное состояние
  void AddLexeme(const std::string &name,size_t type);//добавить лексему в список распознаваемых
  bool GetLexeme(char symbol,std::vector<CLexeme> &vector_CLexeme);//подать очередной символ и получить собранную лексему
 private:
  //-закрытые функции-----------------------------------------------------------------------------------  
  uint32_t GetLexemeType(const std::string &name);//получить тип лексемы
};

#endif