#ifndef C_ACTION_SINGLE_H
#define C_ACTION_SINGLE_H

//****************************************************************************************************
// ласс действи€ "одиночное действие"
//»спользуетс€ дл€ предотвращени€ множественного выполнени€ действи€ при срабатывании событи€
//с множеством однотипных объектов. Ќапример, если персонаж состоит из нескольких тайлов, то
//при пересечении их событие сработает столько раз, сколько было пересечений.
//Ётот класс полволит выполнитьс€ только одному событию из множества.
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
//****************************************************************************************************
#include "iaction.h"
#include <stdint.h>
#include <memory>

//****************************************************************************************************
//макроопределени€
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объ€влени€
//****************************************************************************************************

//****************************************************************************************************
// ласс действи€ "одиночное действие"
//****************************************************************************************************
class CActionSingle:public IAction
{
 public:
  //-перечислени€---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
  bool First;//€вл€етс€ ли запуск первым
  std::shared_ptr<IAction> iAction_NextPtr;//указатель на следующее действие
 public:
  //-конструктор----------------------------------------------------------------------------------------
  CActionSingle(std::shared_ptr<IAction> iAction_Ptr=std::shared_ptr<IAction>(NULL));
  //-деструктор-----------------------------------------------------------------------------------------
  ~CActionSingle();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  void Execute(std::shared_ptr<IPart> iPart_Ptr,CGameState &cGameState);//выполнить действие с элементом
  void Init(void);//инициализаци€
 private:
  //-закрытые функции-----------------------------------------------------------------------------------  
};

#endif